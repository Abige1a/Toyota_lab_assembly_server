//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.XarmMoveit
{
    [Serializable]
    public class UnityRobotServiceRequest : Message
    {
        public const string k_RosMessageName = "xarm_moveit/UnityRobotService";
        public override string RosMessageName => k_RosMessageName;

        public int mode;
        public double gripper_status;
        public Geometry.PoseMsg[] target_pose;
        public double[] velocity_control;
        public double[] configuration;
        public Moveit.RobotTrajectoryMsg[] original_trajectories;

        public UnityRobotServiceRequest()
        {
            this.mode = 0;
            this.gripper_status = 0.0;
            this.target_pose = new Geometry.PoseMsg[0];
            this.velocity_control = new double[6];
            this.configuration = new double[6];
            this.original_trajectories = new Moveit.RobotTrajectoryMsg[0];
        }

        public UnityRobotServiceRequest(int mode, double gripper_status, Geometry.PoseMsg[] target_pose, double[] velocity_control, double[] configuration, Moveit.RobotTrajectoryMsg[] original_trajectories)
        {
            this.mode = mode;
            this.gripper_status = gripper_status;
            this.target_pose = target_pose;
            this.velocity_control = velocity_control;
            this.configuration = configuration;
            this.original_trajectories = original_trajectories;
        }

        public static UnityRobotServiceRequest Deserialize(MessageDeserializer deserializer) => new UnityRobotServiceRequest(deserializer);

        private UnityRobotServiceRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.mode);
            deserializer.Read(out this.gripper_status);
            deserializer.Read(out this.target_pose, Geometry.PoseMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.velocity_control, sizeof(double), 6);
            deserializer.Read(out this.configuration, sizeof(double), 6);
            deserializer.Read(out this.original_trajectories, Moveit.RobotTrajectoryMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.mode);
            serializer.Write(this.gripper_status);
            serializer.WriteLength(this.target_pose);
            serializer.Write(this.target_pose);
            serializer.Write(this.velocity_control);
            serializer.Write(this.configuration);
            serializer.WriteLength(this.original_trajectories);
            serializer.Write(this.original_trajectories);
        }

        public override string ToString()
        {
            return "UnityRobotServiceRequest: " +
            "\nmode: " + mode.ToString() +
            "\ngripper_status: " + gripper_status.ToString() +
            "\ntarget_pose: " + System.String.Join(", ", target_pose.ToList()) +
            "\nvelocity_control: " + System.String.Join(", ", velocity_control.ToList()) +
            "\nconfiguration: " + System.String.Join(", ", configuration.ToList()) +
            "\noriginal_trajectories: " + System.String.Join(", ", original_trajectories.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
