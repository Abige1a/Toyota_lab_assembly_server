//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.XarmMoveit
{
    [Serializable]
    public class DetectionServiceRequest : Message
    {
        public const string k_RosMessageName = "xarm_moveit/DetectionService";
        public override string RosMessageName => k_RosMessageName;

        public Sensor.CameraInfoMsg rgb_camera_info;
        public Sensor.CameraInfoMsg depth_camera_info;
        public Sensor.ImageMsg rgb;
        public Sensor.ImageMsg depth;
        public Geometry.PoseMsg pose;
        public string prompt;
        public byte detect_mode;

        public DetectionServiceRequest()
        {
            this.rgb_camera_info = new Sensor.CameraInfoMsg();
            this.depth_camera_info = new Sensor.CameraInfoMsg();
            this.rgb = new Sensor.ImageMsg();
            this.depth = new Sensor.ImageMsg();
            this.pose = new Geometry.PoseMsg();
            this.prompt = "";
            this.detect_mode = 0;
        }

        public DetectionServiceRequest(Sensor.CameraInfoMsg rgb_camera_info, Sensor.CameraInfoMsg depth_camera_info, Sensor.ImageMsg rgb, Sensor.ImageMsg depth, Geometry.PoseMsg pose, string prompt, byte detect_mode)
        {
            this.rgb_camera_info = rgb_camera_info;
            this.depth_camera_info = depth_camera_info;
            this.rgb = rgb;
            this.depth = depth;
            this.pose = pose;
            this.prompt = prompt;
            this.detect_mode = detect_mode;
        }

        public static DetectionServiceRequest Deserialize(MessageDeserializer deserializer) => new DetectionServiceRequest(deserializer);

        private DetectionServiceRequest(MessageDeserializer deserializer)
        {
            this.rgb_camera_info = Sensor.CameraInfoMsg.Deserialize(deserializer);
            this.depth_camera_info = Sensor.CameraInfoMsg.Deserialize(deserializer);
            this.rgb = Sensor.ImageMsg.Deserialize(deserializer);
            this.depth = Sensor.ImageMsg.Deserialize(deserializer);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
            deserializer.Read(out this.prompt);
            deserializer.Read(out this.detect_mode);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.rgb_camera_info);
            serializer.Write(this.depth_camera_info);
            serializer.Write(this.rgb);
            serializer.Write(this.depth);
            serializer.Write(this.pose);
            serializer.Write(this.prompt);
            serializer.Write(this.detect_mode);
        }

        public override string ToString()
        {
            return "DetectionServiceRequest: " +
            "\nrgb_camera_info: " + rgb_camera_info.ToString() +
            "\ndepth_camera_info: " + depth_camera_info.ToString() +
            "\nrgb: " + rgb.ToString() +
            "\ndepth: " + depth.ToString() +
            "\npose: " + pose.ToString() +
            "\nprompt: " + prompt.ToString() +
            "\ndetect_mode: " + detect_mode.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
