//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.XarmMoveit
{
    [Serializable]
    public class UnityTreeInformationResponse : Message
    {
        public const string k_RosMessageName = "xarm_moveit/UnityTreeInformation";
        public override string RosMessageName => k_RosMessageName;

        public int mode;
        public string question_text;
        public HighlevelPlanMsg[] highlevel_plan;
        public Geometry.PoseMsg[] server_poses;
        public int server_verify;
        public BehaviorTreeMsg detailed_tree;

        public UnityTreeInformationResponse()
        {
            this.mode = 0;
            this.question_text = "";
            this.highlevel_plan = new HighlevelPlanMsg[0];
            this.server_poses = new Geometry.PoseMsg[0];
            this.server_verify = 0;
            this.detailed_tree = new BehaviorTreeMsg();
        }

        public UnityTreeInformationResponse(int mode, string question_text, HighlevelPlanMsg[] highlevel_plan, Geometry.PoseMsg[] server_poses, int server_verify, BehaviorTreeMsg detailed_tree)
        {
            this.mode = mode;
            this.question_text = question_text;
            this.highlevel_plan = highlevel_plan;
            this.server_poses = server_poses;
            this.server_verify = server_verify;
            this.detailed_tree = detailed_tree;
        }

        public static UnityTreeInformationResponse Deserialize(MessageDeserializer deserializer) => new UnityTreeInformationResponse(deserializer);

        private UnityTreeInformationResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.mode);
            deserializer.Read(out this.question_text);
            deserializer.Read(out this.highlevel_plan, HighlevelPlanMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.server_poses, Geometry.PoseMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.server_verify);
            this.detailed_tree = BehaviorTreeMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.mode);
            serializer.Write(this.question_text);
            serializer.WriteLength(this.highlevel_plan);
            serializer.Write(this.highlevel_plan);
            serializer.WriteLength(this.server_poses);
            serializer.Write(this.server_poses);
            serializer.Write(this.server_verify);
            serializer.Write(this.detailed_tree);
        }

        public override string ToString()
        {
            return "UnityTreeInformationResponse: " +
            "\nmode: " + mode.ToString() +
            "\nquestion_text: " + question_text.ToString() +
            "\nhighlevel_plan: " + System.String.Join(", ", highlevel_plan.ToList()) +
            "\nserver_poses: " + System.String.Join(", ", server_poses.ToList()) +
            "\nserver_verify: " + server_verify.ToString() +
            "\ndetailed_tree: " + detailed_tree.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
